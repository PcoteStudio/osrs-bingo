// <auto-generated />
using System;
using Bingo.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bingo.Api.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250425033323_AddedDepth")]
    partial class AddedDepth
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("Bingo.Api.Data.Entities.BoardEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EventId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("BoardEntity");

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Bingo.Api.Data.Entities.DropEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double?>("DropRate")
                        .HasColumnType("REAL");

                    b.Property<double?>("Ehc")
                        .HasColumnType("REAL");

                    b.Property<int>("ItemId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NpcId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ItemId");

                    b.HasIndex("NpcId");

                    b.ToTable("DropInfos");
                });

            modelBuilder.Entity("Bingo.Api.Data.Entities.EventEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("BoardId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTimeOffset?>("EndTime")
                        .HasColumnType("TEXT");

                    b.Property<int?>("EventId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<DateTimeOffset?>("StartTime")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EventId")
                        .IsUnique();

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Bingo.Api.Data.Entities.GrindEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Metric")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<double?>("Target")
                        .HasColumnType("REAL");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Grinds");
                });

            modelBuilder.Entity("Bingo.Api.Data.Entities.GrindProgressionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("GrindId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsGrindCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TileEntityId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("GrindId");

                    b.HasIndex("TileEntityId");

                    b.ToTable("GrindProgressions");
                });

            modelBuilder.Entity("Bingo.Api.Data.Entities.ItemEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("GrindEntityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("GrindEntityId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Bingo.Api.Data.Entities.NpcEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<double?>("KillsPerHours")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Npcs");
                });

            modelBuilder.Entity("Bingo.Api.Data.Entities.PlayerEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Bingo.Api.Data.Entities.ProgressionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DropId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GrindProgressionId")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("MetricsProgress")
                        .HasColumnType("REAL");

                    b.Property<int>("PlayerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DropId");

                    b.HasIndex("GrindProgressionId");

                    b.HasIndex("PlayerId");

                    b.ToTable("Progressions");
                });

            modelBuilder.Entity("Bingo.Api.Data.Entities.TeamEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EventId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("Bingo.Api.Data.Entities.TileEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("BoardId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int>("EventId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GrindCountForCompletion")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("MultiLayerBoardId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BoardId");

                    b.HasIndex("EventId");

                    b.HasIndex("MultiLayerBoardId");

                    b.ToTable("Tiles");
                });

            modelBuilder.Entity("Bingo.Api.Data.Entities.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EmailNormalized")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int?>("EventId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("Permissions")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.Property<string>("UsernameNormalized")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PlayerEntityTeamEntity", b =>
                {
                    b.Property<int>("PlayerId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TeamId")
                        .HasColumnType("INTEGER");

                    b.HasKey("PlayerId", "TeamId");

                    b.HasIndex("TeamId");

                    b.ToTable("PlayerEntityTeamEntity");
                });

            modelBuilder.Entity("Bingo.Api.Data.Entities.MultiLayerBoardEntity", b =>
                {
                    b.HasBaseType("Bingo.Api.Data.Entities.BoardEntity");

                    b.Property<int>("Depth")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Height")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Width")
                        .HasColumnType("INTEGER");

                    b.ToTable("MultiLayerBoards");
                });

            modelBuilder.Entity("Bingo.Api.Data.Entities.DropEntity", b =>
                {
                    b.HasOne("Bingo.Api.Data.Entities.ItemEntity", "Item")
                        .WithMany("Drops")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bingo.Api.Data.Entities.NpcEntity", "Npc")
                        .WithMany("Drops")
                        .HasForeignKey("NpcId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Npc");
                });

            modelBuilder.Entity("Bingo.Api.Data.Entities.EventEntity", b =>
                {
                    b.HasOne("Bingo.Api.Data.Entities.BoardEntity", "Board")
                        .WithOne("Event")
                        .HasForeignKey("Bingo.Api.Data.Entities.EventEntity", "EventId");

                    b.Navigation("Board");
                });

            modelBuilder.Entity("Bingo.Api.Data.Entities.GrindProgressionEntity", b =>
                {
                    b.HasOne("Bingo.Api.Data.Entities.GrindEntity", "Grind")
                        .WithMany()
                        .HasForeignKey("GrindId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bingo.Api.Data.Entities.TileEntity", null)
                        .WithMany("GrindProgressions")
                        .HasForeignKey("TileEntityId");

                    b.Navigation("Grind");
                });

            modelBuilder.Entity("Bingo.Api.Data.Entities.ItemEntity", b =>
                {
                    b.HasOne("Bingo.Api.Data.Entities.GrindEntity", null)
                        .WithMany("Drops")
                        .HasForeignKey("GrindEntityId");
                });

            modelBuilder.Entity("Bingo.Api.Data.Entities.ProgressionEntity", b =>
                {
                    b.HasOne("Bingo.Api.Data.Entities.ItemEntity", "Drop")
                        .WithMany()
                        .HasForeignKey("DropId");

                    b.HasOne("Bingo.Api.Data.Entities.GrindProgressionEntity", "GrindProgression")
                        .WithMany("Progressions")
                        .HasForeignKey("GrindProgressionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bingo.Api.Data.Entities.PlayerEntity", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Drop");

                    b.Navigation("GrindProgression");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("Bingo.Api.Data.Entities.TeamEntity", b =>
                {
                    b.HasOne("Bingo.Api.Data.Entities.EventEntity", "Event")
                        .WithMany("Teams")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Event");
                });

            modelBuilder.Entity("Bingo.Api.Data.Entities.TileEntity", b =>
                {
                    b.HasOne("Bingo.Api.Data.Entities.BoardEntity", "Board")
                        .WithMany()
                        .HasForeignKey("BoardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bingo.Api.Data.Entities.EventEntity", "Event")
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bingo.Api.Data.Entities.MultiLayerBoardEntity", null)
                        .WithMany("Tiles")
                        .HasForeignKey("MultiLayerBoardId");

                    b.Navigation("Board");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("Bingo.Api.Data.Entities.UserEntity", b =>
                {
                    b.HasOne("Bingo.Api.Data.Entities.EventEntity", null)
                        .WithMany("Administrators")
                        .HasForeignKey("EventId");
                });

            modelBuilder.Entity("PlayerEntityTeamEntity", b =>
                {
                    b.HasOne("Bingo.Api.Data.Entities.PlayerEntity", null)
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bingo.Api.Data.Entities.TeamEntity", null)
                        .WithMany()
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Bingo.Api.Data.Entities.MultiLayerBoardEntity", b =>
                {
                    b.HasOne("Bingo.Api.Data.Entities.BoardEntity", null)
                        .WithOne()
                        .HasForeignKey("Bingo.Api.Data.Entities.MultiLayerBoardEntity", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Bingo.Api.Data.Entities.BoardEntity", b =>
                {
                    b.Navigation("Event")
                        .IsRequired();
                });

            modelBuilder.Entity("Bingo.Api.Data.Entities.EventEntity", b =>
                {
                    b.Navigation("Administrators");

                    b.Navigation("Teams");
                });

            modelBuilder.Entity("Bingo.Api.Data.Entities.GrindEntity", b =>
                {
                    b.Navigation("Drops");
                });

            modelBuilder.Entity("Bingo.Api.Data.Entities.GrindProgressionEntity", b =>
                {
                    b.Navigation("Progressions");
                });

            modelBuilder.Entity("Bingo.Api.Data.Entities.ItemEntity", b =>
                {
                    b.Navigation("Drops");
                });

            modelBuilder.Entity("Bingo.Api.Data.Entities.NpcEntity", b =>
                {
                    b.Navigation("Drops");
                });

            modelBuilder.Entity("Bingo.Api.Data.Entities.TileEntity", b =>
                {
                    b.Navigation("GrindProgressions");
                });

            modelBuilder.Entity("Bingo.Api.Data.Entities.MultiLayerBoardEntity", b =>
                {
                    b.Navigation("Tiles");
                });
#pragma warning restore 612, 618
        }
    }
}
